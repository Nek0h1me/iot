import cv2
import face_recognition
import numpy as np
import requests
import os

#  Th∆∞ m·ª•c ch·ª©a ·∫£nh g·ªëc
KNOWN_FACES_DIR = "mat_chu_nha"

#  Load t·∫•t c·∫£ ·∫£nh trong th∆∞ m·ª•c matchunha
known_encodings = []
known_names = []

for filename in os.listdir(KNOWN_FACES_DIR):
    if filename.endswith(".jpg") or filename.endswith(".png"):
        img_path = os.path.join(KNOWN_FACES_DIR, filename)
        image = face_recognition.load_image_file(img_path)
        encodings = face_recognition.face_encodings(image)

        if len(encodings) > 0:
            known_encodings.append(encodings[0])
            known_names.append(filename)  # L∆∞u t√™n file ƒë·ªÉ nh·∫≠n di·ªán

print(f"üîπ ƒê√£ t·∫£i {len(known_encodings)} khu√¥n m·∫∑t t·ª´ th∆∞ m·ª•c '{KNOWN_FACES_DIR}'!")

#  L·∫•y ·∫£nh t·ª´ ESP32-CAM
esp_url = "http://172.20.10.2/capture"
response = requests.get(esp_url)

if response.status_code == 200:
    with open("captured.jpg", "wb") as f:
        f.write(response.content)

    # Load ·∫£nh v·ª´a ch·ª•p t·ª´ ESP32-CAM
    frame = cv2.imread("captured.jpg")
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    # üîç T√¨m khu√¥n m·∫∑t trong ·∫£nh m·ªõi
    face_locations = face_recognition.face_locations(rgb_frame)
    face_encodings = face_recognition.face_encodings(rgb_frame, face_locations)

    if len(face_encodings) > 0:
        #  So s√°nh v·ªõi t·∫•t c·∫£ khu√¥n m·∫∑t ƒë√£ l∆∞u
        for i, known_encoding in enumerate(known_encodings):
            match = face_recognition.compare_faces([known_encoding], face_encodings[0])

            if match[0]:
                print(f"‚úÖ Khu√¥n m·∫∑t tr√πng kh·ªõp v·ªõi {known_names[i]}!")
                break
        else:
            print("‚ùå Kh√¥ng t√¨m th·∫•y khu√¥n m·∫∑t tr√πng kh·ªõp!")

    else:
        print("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y khu√¥n m·∫∑t trong ·∫£nh!")

else:
    print("üö´ Kh√¥ng th·ªÉ l·∫•y ·∫£nh t·ª´ ESP32-CAM!")
